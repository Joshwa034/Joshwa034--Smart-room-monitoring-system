import cv2
import os
import time
import mysql.connector

# Connect to MySQL database
mydb = mysql.connector.connect(
  host="localhost",
  user="root",
  password="",
  database="motion_detection"
)

# initialize the camera
camera = cv2.VideoCapture(0)

# create the images directory if it doesn't exist
if not os.path.exists("images"):
    os.makedirs("images")

# capture the first frame as the background
background = None

# initialize variables for image capture-
capture_time = time.time() + 1000000
capture_count = 0
last_capture_time = time.time()

# loop over the frames from the camera
while True:
    # read the current frame from the camera
    ret, frame = camera.read()

    if not ret:
        print("Error reading frame from camera")
        break

    # convert the frame to grayscale and blur it
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    gray = cv2.GaussianBlur(gray, (21, 21), 0)

    # if the background is not set, initialize it to the first frame
    if background is None:
        background = gray
        continue

    # compute the absolute difference between the current frame and the background
    diff = cv2.absdiff(background, gray)

    # apply a threshold to the difference image
    thresh = cv2.threshold(diff, 25, 255, cv2.THRESH_BINARY)[1]

    # dilate the thresholded image to fill in the holes
    thresh = cv2.dilate(thresh, None, iterations=2)

    # find contours in the thresholded image
    contours, hierarchy = cv2.findContours(thresh.copy(), cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

    # loop over the contours
    for contour in contours:
        # if the contour is too small, ignore it
        if cv2.contourArea(contour) < 500:
            continue

        # compute the bounding box for the contour
        (x, y, w, h) = cv2.boundingRect(contour)

        # draw the bounding box on the frame
        cv2.rectangle(frame, (x, y), (x + w, y + h), (0, 255, 0), 2)
        filename = ""

        # capture images if not already capturing
        if capture_time is not None and time.time() - capture_time < 10 and capture_count < 5 and time.time() - last_capture_time >= 2:
            filename = "images/image{}_{}.jpg".format(capture_count, int(time.time()))
            cv2.imwrite(filename, frame)

            # insert image file name and capture time into MySQL database
            mycursor = mydb.cursor()
            sql = "INSERT INTO images (filename, capture_time) VALUES (%s, %s)"
            val = (filename, time.strftime('%Y-%m-%d %H:%M:%S', time.localtime()))
            mycursor.execute(sql, val)
            mydb.commit()

            capture_count += 1
            last_capture_time = time.time()

        # reset image capture variables if capturing finished
        if capture_time is not None and time.time() - capture_time >= 10:
            capture_time = time.time() + 30
            capture_count = 0

    # update capture time if motion is detected
    # update capture time if motion is detected
    if len(contours) > 0:
        capture_time = time.time()
        # Connect to database
        conn = mysql.connector.connect(host='localhost', user='root', password='', database='motion_detection')
        cursor = conn.cursor()

        # Insert image and capture time into database
        if capture_count == 5:
            for i in range(5):
                filename = "images/image{}_{}.jpg".format(i, int(time.time()))
                current_time = time.strftime('%Y-%m-%d %H:%M:%S')
                with open(filename, 'rb') as f:
                    image_data = f.read()
                insert_query = "INSERT INTO images (image_data, capture_time) VALUES (%s, %s)"
                cursor.execute(insert_query, (image_data, current_time))
                conn.commit()
            cursor.close()
            conn.close()

    # display the frame
    cv2.imshow("Motion Detection", frame)

# check for key presses
    key = cv2.waitKey(1) & 0xFF

# if the 'q' key is pressed, stop the loop
    if key == ord("q"):
        break
# release the camera and close the window
camera.release()
cv2.destroyAllWindows()

proper ---------------------------------------------------------------------------------













motion detection python program which should detect motion and take 5 images with a 2 second delay between each capture , it should ignore motion detected by lighting or motion caused by wind , so after this store the image , date , time in a database called motion_detection and store this information in table called images. i would be using xampp for server. and after taking 5 images there should be 30 seconds waiting and during this 30 seconds the images should not be captured , after that the program should again detect motion if detected take 5 images and continue this process .provide me the full code 







FINAL WORKING CODE :


import cv2
import time
import mysql.connector
import os

# Connect to database
mydb = mysql.connector.connect(
  host="localhost",
  user="root",
  password="",
  database="motion_detection2"
)
cursor = mydb.cursor()

# Create a directory for storing the images if it does not exist
if not os.path.exists("MDimages"):
    os.makedirs("MDimages")




# Initialize camera and motion detector
cam = cv2.VideoCapture(0)
time.sleep(2)
first_frame = None
motion_detected = False

# Main loop
while True:
    ret, frame = cam.read()
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    gray = cv2.GaussianBlur(gray, (21, 21), 0)

    if first_frame is None:
        first_frame = gray
        continue

    delta_frame = cv2.absdiff(first_frame, gray)
    thresh_frame = cv2.threshold(delta_frame, 30, 255, cv2.THRESH_BINARY)[1]
    thresh_frame = cv2.dilate(thresh_frame, None, iterations=2)

    # Find contours of moving objects
    contours, _ = cv2.findContours(thresh_frame.copy(), cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

    for contour in contours:
        if cv2.contourArea(contour) < 10000:
            continue
        motion_detected = True

    if motion_detected:
        for i in range(5):
            # Capture image
            ret, frame = cam.read()
            filename = os.path.join("MDimages", time.strftime("%Y%m%d-%H%M%S") + f"_{i}.jpg")
            print(filename)
            cv2.imwrite(filename, frame)

            # Store image information in database
            date = time.strftime("%Y-%m-%d")
            print(date)
            time_ = time.strftime("%H:%M:%S")
            print(time_)
            sql = "INSERT INTO images (filename, date, time) VALUES (%s, %s, %s)"
            val = (filename, date, time_)
            cursor.execute(sql, val)
            mydb.commit()

            time.sleep(2)

        # Reset motion detection and wait for 30 seconds before detecting motion again
        motion_detected = False
        time.sleep(30)
    else:
        # Wait for 1 second before checking for motion again
        time.sleep(1)
    
# Release camera and close database connection
cam.release()
cv2.destroyAllWindows()
cursor.close()
mydb.close()
